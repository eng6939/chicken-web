<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chicken.dao.GoodOrderDao" >
  <resultMap id="BaseResultMap" type="com.chicken.model.GoodOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="good_id" property="goodId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="exchange_time" property="exchangeTime" jdbcType="TIMESTAMP" />
    <result column="exchange_status" property="exchangeStatus" jdbcType="CHAR" />
    <result column="express_num" property="expressNum" jdbcType="VARCHAR" />
    <result column="order_num" property="orderNum" jdbcType="VARCHAR" />
    <result column="express_name" property="expressName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_user" property="modifyUser" jdbcType="INTEGER" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_good_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.chicken.model.GoodOrder" >
    insert into t_good_order (id, good_id, user_id, 
      exchange_time, exchange_status, order_num, 
      express_name, status, create_time, 
      modify_user, modify_time,express_num)
    values (#{id,jdbcType=INTEGER}, #{goodId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{exchangeTime,jdbcType=TIMESTAMP}, #{exchangeStatus,jdbcType=CHAR}, #{orderNum,jdbcType=VARCHAR}, 
      #{expressName,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyUser,jdbcType=INTEGER}, #{modifyTime,jdbcType=TIMESTAMP}, #{expressNum,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.chicken.model.GoodOrder" >
    update t_good_order
    set good_id = #{goodId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      exchange_time = #{exchangeTime,jdbcType=TIMESTAMP},
      exchange_status = #{exchangeStatus,jdbcType=CHAR},
      order_num = #{orderNum,jdbcType=VARCHAR},
      express_name = #{expressName,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_user = #{modifyUser,jdbcType=INTEGER},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      express_num = #{expressNum,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, good_id, user_id, exchange_time, exchange_status, order_num, express_name, 
    status, create_time, modify_user, modify_time,express_num
    from t_good_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, good_id, user_id, exchange_time, exchange_status, order_num, express_name, 
    status, create_time, modify_user, modify_time,express_num
    from t_good_order
  </select>
  <select id="selectByGoodOrder" resultType="java.util.HashMap" parameterType="com.chicken.vo.GoodOrderRequest" >
    select t.id, t.create_time, t.exchange_time,i.good_name,i.good_type,t.exchange_status,
    t.order_num,t.express_name,a.nick_name,a.openid,t.express_num
    from t_good_order t
    left join t_good_info i on i.id = t.good_id
    left join t_wechat_user a on a.id = t.user_id
    WHERE 1=1
    <if test="goodId != null and goodId !=''" >
      AND t.good_id = #{goodId}
    </if>
    <if test="userId != null and userId !=''" >
      AND t.user_id = #{userId}
    </if>
    <if test="exchangeStatus != null and exchangeStatus !=''" >
      AND t.exchange_status = #{exchangeStatus}
    </if>
    <if test="expressName != null and expressName !=''" >
      AND t.express_name = #{expressName}
    </if>
    <if test="orderNum != null and orderNum !=''" >
      AND t.order_num = #{orderNum}
    </if>
    <if test="expressNum != null and expressNum !=''" >
      AND t.express_num = #{expressNum}
    </if>
    ORDER BY t.create_time DESC
  </select>
  <update id="updateExchangeStatusById" >
    update t_good_info
    set exchange_status = #{exchangeStatus},modify_time=${exchangeTime},modify_user=${modifyUser}
    where id = #{id}
  </update>
</mapper>